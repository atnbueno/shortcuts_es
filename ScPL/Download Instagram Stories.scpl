@ShowInShareSheet [string url]
@Icon camera
@Color orange

@set ServiceName "storiesig" // ScPL only
@set ServicePrefix "https://\(@:ServiceName).com/stories/" // ScPL only

Comment
| I was looking into downloading Instagram stories for someone and found www.\(@:ServiceName).com. Upon seeing how simple it is, I decided to make a shortcut with it, and it was relatively easy to do.  It may serve as an example to learn Shortcuts, so I have added comments in the non-trivial steps â€” @atnbueno (2019-12-23)
|
| RoutineHubUpdate
| 
| Current Version: "1.1.1"
| RoutineHub ID: "4270"
|
| RoutineHubUpdate

Comment "The shortcut works with usernames or URLs that are shared with it. If nothing is shared, it will ask for them, offering the clipboard as default input."
GetVariable s:ShortcutInput
Count Items
If input=Equals value=0
	AskforInput question="Instagram Username or URL?" defaultAnswer=s:Clipboard
Otherwise
	GetVariable s:ShortcutInput
End

Comment "Clean up the input to get the username"
ReplaceText findText="https://www.instagram.com/([^/]+)" replaceWith="$1" caseSensitive=false regularExpression=true
ReplaceText findText="[^\\w.]" caseSensitive=false regularExpression=true
ChangeCase lowercase
SetVariable Username

Comment "The shortcut will download the files of the indicated user in a subfolder of iCloud Drive/Shortcuts/\(@:ServiceName)/"
CreateFolder path="\(@:ServiceName)/\(v:Username)"
URL "\(@:ServicePrefix)\(v:Username)"
GetContentsofURL advanced=false

Comment
| Get the HTML code of the page, decoding the "&" characters
|
| - The "trick" to access the HTML source is to rename the downloaded file to something with a ".txt" extension
| - The "&" in the HTML source are encoded as "&amp;" so the links taht include them can't be used as is
SetName name="html.txt" -> mv:"Set Name"
ReplaceText findText="&amp;" replaceWith="&" -> mv:"Replace Text"

Comment
| Extract the URLs that appear right before the word "DOWNLOAD"
|
| - The regular expression used means: capture from "https: //" until you find quotes (") that are followed by the text ">DOWNLOAD""
MatchText pattern="https://[^\"]+(?=\"[^>]+>DOWNLOAD)" caseSensitive=true

Comment
| Sometimes you have to wait a moment to give Shortcuts time to process the data it downloads
|
| - If a shortcut that works with downloaded files works sometimes and sometimes not, it is often enough to add a one-second pause to make it always work"
Wait

Comment
| The following "Combine" and "Get URLs..." convert the matched fragments into URLs
|
| - Although visually they are the same, Shortcuts internally considers them different types of data
| - If this is not done you would get an "A URL was not specified" error"
CombineText separator="New Lines"
GetURLsfromInput -> mv:URLs
Count Items -> mv:Count

Comment "Notify the user of what has been found"
If input="Is Greater Than" number=0
	Comment "Ask the user if he wants to download the files, reminding where they will be saved"
	ShowAlert title=@:ServiceName message="\(mv:Count) files have been found\n\nDo you want to download them to /Shortcuts/\(@:ServiceName)/\(v:Username)/?"
	GetVariable mv:URLs
	RepeatwithEach
		Comment
        | Download and save each file
        | - Fortunately, each file has its own unique name, so we don't have to take care of that
		GetContentsofURL
		SaveFile askWheretoSave=false destinationPath="\(@:ServiceName)/\(v:Username)/" overwriteIfFileExists=true
	End
    Comment "As a final step, offer to the user the option to open the corresponding folder in iCloud Drive"
	ShowAlert title=@:ServiceName message="\(mv:Count) files have been downloaded\n\nDo you want to open /Shortcuts/\(@:ServiceName)/\(v:Username)/?"
	URL "shareddocuments:///private/var/mobile/Library/Mobile%20Documents/iCloud~is~workflow~my~workflows/Documents/\(@:ServiceName)/\(v:Username)/"
	OpenURLs
Otherwise
	ShowAlert title=@:ServiceName message="Nothing to download from user \"\(v:Username)\"" showCancelButton=false
End
